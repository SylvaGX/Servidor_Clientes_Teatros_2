syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.utad.server";
option java_outer_classname = "ServerProto";
option objc_class_prefix = "SRT";
option csharp_namespace = "gRPCProto";

package gRPCProto;

// Interface exported by the server.
service Login {
	/*
	Returns a connected User with a random Key
	if the id is -1 the email or password fields are wrong
	*/

	rpc CheckLogin(UserLogin) returns (UserConnected){}
}

service Register {

	/*
	Functions to register the vary users
	*/
	rpc RegisterUser(UserRegister) returns (UserConnected) {}
	rpc RegisterManager(ManagerRegister) returns (UserConnected) {}
	rpc RegisterAdmin(AdminRegister) returns (UserConnected) {}
}

service UserService {

	/*
	Return a user info
	*/
	rpc GetUser(UserConnected) returns (UserInfo) {}

	/*
	Add money to the account of the user
	*/
	rpc AddMoney(UserAddMoney) returns (Confirmation) {}
}

service LocalizationService {

	/*
	Returns all localizations
	*/
	rpc GetLocalizations(UserConnected) returns (stream LocalizationInfo) {}
}

service TheaterService {

	/*
	Returns all theaters
	*/
	rpc GetTheaters(UserConnected) returns (stream TheaterInfo) {}
}

service ShowService {

	/*
	Returns all shows
	*/
	rpc GetShows(UserConnected) returns (stream ShowInfo) {}
}

service SessionService {

	/*
	Returns all sessions
	*/
	rpc GetSessions(ShowInfo) returns (stream SessionInfo) {}
}

service CartService {
	/*
	Checks if a shows have space in it and if they have it reserve places of the respectively show by incresing the AvailablePlaces
	*/
	rpc ReservePlaces(SessionInfoReserve) returns (Confirmation) {}

	/*
	Cancel a reserve of a session
	*/
	rpc CancelReservationPlaces(SessionInfoReserve) returns (Confirmation) {}
}

service CompraService {
	/*
	Buys the sessions in the shopping cart
	*/
	rpc BuySessions(stream SessionInfoCompra) returns (RefCompra) {}

	/*
	Returns the history of purchases of a user 
	*/
	rpc HistoryUser(UserConnected) returns (stream PurchaseInfo) {}
}

message UserLogin {
	string email = 1;
	string password = 2;
}

message UserConnected {
	int32 id = 1;
	string type = 2;
}

message UserRegister {
	string name = 1;
	string email = 2;
	string password = 3;
	int32 idLocalization = 4;
}

message ManagerRegister {
	string name = 1;
	string email = 2;
	string password = 3;
	int32 idLocalization = 4;
}

message AdminRegister {
	string name = 1;
	string email = 2;
	string password = 3;
	int32 idLocalization = 4;
}

message UserInfo {
	int32 id = 1;
	string name = 2;
	string email = 3;
	double fundos = 5;
	LocalizationInfo localization = 6;
	repeated PurchaseInfo purchases = 7;
}

message TheaterInfo {
	int32 id = 1;
	string name = 2;
	string address = 3;
	string contact = 4;
	LocalizationInfo localization = 5;
	repeated ShowInfo shows = 7;
}

message ShowInfo {
	int32 id = 1;
	string name = 2;
	string sinopse = 3;
	int64 startDate = 4;
	int64 endDate = 5;
	double price = 6;
	TheaterInfo theater = 7;
	repeated SessionInfo sessions = 8;
}

message SessionInfo {
	int32 id = 1;
	int64 sessionDate = 2;
	int64 startHour = 3;
	int64 endHour = 4;
	int32 AvaiablePlaces = 5;
	int32 TotalPlaces = 6;
	ShowInfo show = 7;
	repeated PurchaseInfo purchases = 8;
}

message PurchaseInfo {
	int32 id = 1;
	string reference = 2;
	int64 datePurchase = 3;
	int32 CompraLugares = 4;
	SessionInfo session = 5;
	UserInfo user = 6;
}

message LocalizationInfo {
	int32 id = 1;
	string name = 2;
	double lat = 3;
	double longi = 4;
	repeated TheaterInfo theaters = 5;
	repeated UserInfo users = 6;
}

message Confirmation {
	// if 0 error
	// if 1 success
	int32 id = 1; 
}

message RefCompra {
	// if 0 error
	// if 1 success
	int32 id = 1; 
	string reference = 2; 
}

message SessionInfoReserve {
	int32 Id = 1;
    int32 NumberPlaces = 2;
}

message SessionInfoCompra {
	int32 Id = 1;
    int32 NumberPlaces = 2;
	int32 UserId = 3; 
	double Price = 4;
}

message UserAddMoney {
	UserConnected user = 1;
	double moneyToAdd = 2;
}
